name: Build release
on:
  release:
    types: [published]
jobs:
  build_release:
    runs-on: ubuntu-latest
    permissions:
      # Give the default GITHUB_TOKEN write permission to commit and push the
      # added or changed files to the repository.
      contents: write
    steps:
    - name: Write release version
      run: |
        VERSION=${GITHUB_REF_NAME#v}
        echo Version: $VERSION
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    - name: Checkout sources
      uses: actions/checkout@v4.1.7
      with:
        fetch-depth: 0

    - name: Setup Java
      uses: actions/setup-java@v4.2.2
      with:
        distribution: 'temurin'
        java-version: 22

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4

    - name: Build
      run: ./gradlew -Pversion=${VERSION} build sourcesJar javadocJar publishToSonatype closeAndReleaseSonatypeStagingRepository
      env:
        ORG_GRADLE_PROJECT_githubActor: ${{ secrets.GITHUBACTOR }}
        ORG_GRADLE_PROJECT_githubToken: ${{ secrets.GITHUBTOKEN }}
        ORG_GRADLE_PROJECT_signingKey: ${{ secrets.SIGNING_KEY }}
        ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.SIGNING_PASSWORD }}
        ORG_GRADLE_PROJECT_sonatypeUser: ${{ secrets.SONATYPE_USER }}
        ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.SONATYPE_PASSWORD }}

    - name: Find branch from tag
      id: find-branch
      run: |
        BRANCH=$(git branch -r --contains ${{ github.event.release.tag_name }} | grep -v '\->' | sed 's/origin\///' | head -n 1)
        if [ -z "$BRANCH" ]; then
          echo "Branch not found for tag $TAG"
          exit 1
        fi
        echo "::set-output name=branch::$BRANCH"        

    - name: Checkout branch HEAD
      run: git checkout ${{ steps.find-branch.outputs.branch }}

    - name: Update README
      run: sed -i 's/com\.xemantic\.kotlin:xemantic-kotlin-swing-dsl-\(core\|test\):[0-9]\+\(\.[0-9]\+\)*\>/com.xemantic.kotlin:xemantic-kotlin-swing-dsl-\1:${VERSION}/g' README.md

    - name: Commit README
      uses: stefanzweifel/git-auto-commit-action@v5
      with:
        commit_message: README.md version updated to ${VERSION}
        file_pattern: 'README.md'
